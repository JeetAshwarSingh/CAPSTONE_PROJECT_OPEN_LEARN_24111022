import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import LabelEncoder
st.title('EDA')
st.header(":blue[INSIGHTS ON DATA]",divider='blue')

df_clean = pd.read_csv("cleaned_survey.csv")
df = pd.read_csv("survey.csv")
df = df.drop(columns=['comments','Timestamp'])
temp = dict(df_clean['gender'].value_counts())
temp2 =list(temp.keys())
temp3 =list(temp.values())
fig,ax = plt.subplots()
ax.bar(temp2,temp3,color = 'skyblue')
ax.set_xlabel("Gender")
ax.set_ylabel("count")
ax.set_title("MALE'S PROFESSIONALS IN COMPANIES VS OTHERS")
st.pyplot(fig)
st.write("___In companies, their is a large percentage of male professionals whereas a small percentage of female professionals,as most companies in this study are in the IT sector.___")
st.dataframe(temp)
st.write("Employees to male percentage:",float((983/1251)*100),'%')
st.write("Employees to female percentage:",float((248/1251)*100),'%')
st.write("Employees to queer percentage:",float((20/1251)*100),'%')
st.write("People that need to seek help related to mental health ")
df_temp = df_clean[df_clean['seek_help']=='Yes']
df_temp = df_temp.groupby("gender")['seek_help'].value_counts()
st.code(df_temp)
st.write("Male to male that seek help in percentage :",float((185/983)*100),'%')
st.write("Female to female that seek help in percentage:",float((56/248)*100),'%')
st.write("Queer to queer that seek help in percentage:",float((6/20)*100),'%')
st.write(":orange[According to this data, Queer people are most susceptible to mental health diseases followed by women and men.]")
st.write('Number of people working in different organisation')
temp = dict(df_clean['no_employees'].value_counts())
st.dataframe(temp)

df_temp = df_clean[df_clean['seek_help']=='Yes']
df_temp = df_temp.groupby("no_employees")['seek_help'].value_counts()
st.subheader(":blue[Number of people working in different organizations]")
st.code(df_temp)
st.write("people working in companies with 1-5 employee to employee's in that companies that seek help in percentage :",float((19/158)*100),'%')
st.write("people working in companies with 6-25 employee to employee's in that companies that seek help in percentage :",float((25/289)*100),'%')
st.write("people working in companies with more than 1000 employee to employee's in that companies that seek help in percentage :",float((122/281)*100),'%')
st.write("people working in companies with 500-1000 employee to employee's in that companies that seek help in percentage :",float((17/175)*100),'%')
st.write("people working in companies with 26-100 employee to employee's in that companies that seek help in percentage :",float((33/288)*100),'%')
st.write("people working in companies with 100-500 employee to employee's in that companies that seek help in percentage :",float((31/175)*100),'%')

st.write(":orange[from above analysis it can be said that people working in very large companies are more likely to suffer from mental health problem]")

temp = dict(df_clean['family_history'].value_counts())
temp2 =list(temp.keys())
temp3 =list(temp.values())
fig,ax = plt.subplots()
ax.bar(temp2,temp3,color = 'green')
ax.set_xlabel("self_employed")
ax.set_ylabel("count")
ax.set_title("MALE'S PROFESSIONALS IN COMPANIES VS OTHERS")
st.pyplot(fig)
st.write("___According to many studies people with family history of mental illness are more likely to suffer from it___")
st.dataframe(temp)
st.header(":blue[CORRELATION MATRIX OF DATA IS]")

df_encoded = pd.DataFrame()
encoder = LabelEncoder()
name_of_features = df.columns.to_list()
img,ax = plt.subplots()
for feature in name_of_features:
    df_encoded[feature] = encoder.fit_transform(df[feature])
    corr = df_encoded.corr()
img = plt.figure(figsize=(25,20))
sns.heatmap(corr, annot=True, cmap='coolwarm', fmt=".2f", square=True)
plt.title("Correlation Matrix (Numerical Features)")
st.pyplot(img)
